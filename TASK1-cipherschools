//task 1
// question 1



//represents the node in the BST 
public class TreeNode {
    int value;
    TreeNode left;
    TreeNode right;

    TreeNode(int value) {
        this.value = value;
        left = null;
        right = null;
    }
}
// represents the bst method

public class BinarySearchTree {
    TreeNode root;

    
    public BinarySearchTree() {
        root = null;
    }

    
    public void insert(int value) {
        root = insertRec(root, value);
    }

    
    private TreeNode insertRec(TreeNode root, int value) {
        if (root == null) {
            root = new TreeNode(value);
            return root;
        }

        if (value < root.value) {
            root.left = insertRec(root.left, value);
        } else if (value > root.value) {
            root.right = insertRec(root.right, value);
        }

        return root;
    }

    
    public boolean search(int value) {
        return searchRec(root, value);
    }

    
    private boolean searchRec(TreeNode root, int value) {
        if (root == null) {
            return false;
        }

        if (root.value == value) {
            return true;
        }

        if (value < root.value) {
            return searchRec(root.left, value);
        } else {
            return searchRec(root.right, value);
        }
    }

    
    public void inOrder() {
        inOrderRec(root);
    }

    
    private void inOrderRec(TreeNode root) {
        if (root != null) {
            inOrderRec(root.left);
            System.out.print(root.value + " ");
            inOrderRec(root.right);
        }
    }

    public static void main(String[] args) {
        BinarySearchTree bst = new BinarySearchTree();

        bst.insert(50);
        bst.insert(30);
        bst.insert(20);
        bst.insert(40);
        bst.insert(70);
        bst.insert(60);
        bst.insert(80);

        System.out.println("In-order traversal of the BST:");
        bst.inOrder();

        System.out.println("\n\nSearch for 40 in the BST:");
        System.out.println(bst.search(40) ? "Found" : "Not Found");

        System.out.println("Search for 90 in the BST:");
        System.out.println(bst.search(90) ? "Found" : "Not Found");
    }
}
